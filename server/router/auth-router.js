const express = require("express")
const router = express.Router()
const authControllers = require("../controllers/auth-controllers")
const validate = require("../middleware/validate-middleware")
const {registerSchema, loginSchema, addContactSchema, updateSchema, updateMainSchema, passwordSchema, forgotPasswordSchema} = require("../validators/auth-validator")
const authMiddleware = require("../middleware/auth-middleware")

router.route("/register").post(validate(registerSchema), authControllers.register)
router.route("/login").post(validate(loginSchema), authControllers.login)
router.route("/addcontact").post(authMiddleware, validate(addContactSchema), authControllers.addContact)
router.route("/getcontacts").post(authMiddleware, authControllers.getContacts)
router.route("/delete/:id").delete(authMiddleware, authControllers.deleteContactById)
router.route("/findcontacts").post(authMiddleware, authControllers.findContacts)
router.route("/getuserbyid/:id").get(authMiddleware, authControllers.getuserbyid)
router.route("/updateuser").patch(authMiddleware, validate(updateSchema), authControllers.updateUser)
router.route("/getfavorites").post(authMiddleware, authControllers.getFavorites)
router.route("/getmydetails").post(authMiddleware, authControllers.getMyDetails)
router.route("/updatemainuser").patch(authMiddleware, validate(updateMainSchema) , authControllers.updateMainUser)
router.route("/password").patch(authMiddleware, validate(passwordSchema), authControllers.changePassword)
router.route("/verifyotp/:email").post(authControllers.verifyOtp)
router.route("/feedback").post(authMiddleware, authControllers.FeedbackResponse)
router.route("/getfeedbacks").get(authControllers.getFeedback)
router.route("/forgotpassword").post(authControllers.forgotPassword)
router.route("/verifyotpforgot").post(authControllers.verifyOtpForgot)
router.route("/changeforgotpassword").post(validate(forgotPasswordSchema), authControllers.changeForgotPassword)

module.exports = router